import {Generated, ColumnType, Kysely, SqliteDialect} from 'kysely'
import {default as SQLiteDatabase} from 'better-sqlite3';

interface UserTable {
  // Columns that are generated by the database should be marked
  // using the `Generated` type. This way they are automatically
  // made optional in inserts and updates.
  id: Generated<number>
  name: string
  email: string
  image: string

  // You can specify a different type for each operation (select, insert and
  // update) using the `ColumnType<SelectType, InsertType, UpdateType>`
  // wrapper. Here we define a column `createdAt` that is selected as
  // a `Date`, can optionally be provided as a `string` in inserts and
  // can never be updated:
  createdAt: ColumnType<Date, string | undefined, never>
}



// Keys of this interface are table names.
export interface Database {
  users: UserTable
}

const sqlite = new SQLiteDatabase('sqlite3.db');
sqlite.pragma('journal_mode = WAL');

// You'd create one of these when you start your app.
export const db = new Kysely<Database>({
  // Use MysqlDialect for MySQL and SqliteDialect for SQLite.
  dialect: new SqliteDialect({
      database: sqlite
  })
})

export { sql } from 'kysely'
