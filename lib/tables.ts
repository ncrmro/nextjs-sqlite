import { ColumnType, Generated } from "kysely";

interface Migration {
  id: Generated<number>;
  filename: string;
  sha: string;
  created_at: ColumnType<Date, string | undefined, never>;
  updated_at: ColumnType<Date, string | undefined, never>;
}

interface User {
  // Columns that are generated by the database should be marked
  // using the `Generated` type. This way they are automatically
  // made optional in inserts and updates.
  id: Generated<string>;
  first_name: string | null;
  last_name: string | null;
  email: string;
  image: string | null;
  // Hashed password
  password: string;

  // You can specify a different type for each operation (select, insert and
  // update) using the `ColumnType<SelectType, InsertType, UpdateType>`
  // wrapper. Here we define a column `createdAt` that is selected as
  // a `Date`, can optionally be provided as a `string` in inserts and
  // can never be updated:
  created_at: ColumnType<Date, string | undefined, never>;
  updated_at: ColumnType<Date, string | undefined, never>;
}

interface Session {
  id: Generated<string>;
  user_id: string;
  last_authenticated: ColumnType<Date, string | undefined>;
  created_at: ColumnType<Date, string | undefined, never>;
  updated_at: ColumnType<Date, string | undefined, never>;
}

interface Posts {
  id: Generated<string>;
  user_id: Generated<string>;
  title: string;
  body: string;
  published: ColumnType<boolean, boolean | undefined>;
  /* Slug must be passed in on insert because before insert trigger 
          doesn't work great in sqlite, updates the trigger works automatically 
       */
  slug: string;
  created_at: ColumnType<Date, string | undefined, never>;
  updated_at: ColumnType<Date, string | undefined, never>;
}

// Keys of this interface are table names.
export interface Database {
  migrations: Migration;
  users: User;
  sessions: Session;
  posts: Posts;
}
